<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="2" passed="1">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="5178" started-at="2021-11-10T12:33:30Z" finished-at="2021-11-10T12:33:35Z">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:org.springframework.samples.petclinic.PetClinicRunnerTest@475e586c]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test name="Default test" duration-ms="5178" started-at="2021-11-10T12:33:30Z" finished-at="2021-11-10T12:33:35Z">
      <class name="org.springframework.samples.petclinic.PetClinicRunnerTest">
        <test-method status="PASS" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:org.springframework.samples.petclinic.PetClinicRunnerTest@475e586c]" name="setUpClass" is-config="true" duration-ms="247" started-at="2021-11-10T12:33:30Z" finished-at="2021-11-10T12:33:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@7004e3d]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method status="PASS" signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:org.springframework.samples.petclinic.PetClinicRunnerTest@475e586c]" name="runScenario" duration-ms="2394" started-at="2021-11-10T12:33:30Z" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-11-10T12:33:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA["Searching non-existing user"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Test Searching Owner and add if it is not existing]"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="FAIL" signature="runScenario(io.cucumber.testng.PickleWrapper, io.cucumber.testng.FeatureWrapper)[pri:0, instance:org.springframework.samples.petclinic.PetClinicRunnerTest@475e586c]" name="runScenario" duration-ms="2512" started-at="2021-11-10T12:33:32Z" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2021-11-10T12:33:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA["Adding owner"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Optional[Test Searching Owner and add if it is not existing]"]]>
              </value>
            </param>
          </params>
          <exception class="io.cucumber.testng.UndefinedStepException">
            <message>
              <![CDATA[The step 'Click "Add Owner" button' and 1 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@When("Click {string} button")
public void click_button(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("Owner table should be visible")
public void owner_table_should_be_visible() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.cucumber.testng.UndefinedStepException: The step 'Click "Add Owner" button' and 1 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@When("Click {string} button")
public void click_button(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("Owner table should be visible")
public void owner_table_should_be_visible() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

at io.cucumber.core.runtime.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:69)
at io.cucumber.testng.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:23)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:133)
at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$3(CucumberExecutionContext.java:110)
at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:110)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- io.cucumber.testng.UndefinedStepException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="tearDownClass()[pri:0, instance:org.springframework.samples.petclinic.PetClinicRunnerTest@475e586c]" name="tearDownClass" is-config="true" duration-ms="7" started-at="2021-11-10T12:33:35Z" finished-at="2021-11-10T12:33:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- org.springframework.samples.petclinic.PetClinicRunnerTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
